student@K0606 MINGW64 ~
$ cd D:\\!Paul\\Oracle\\MyDb

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb
$ git config --global user.name "Paul"

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb
$ git config --global user.email "b.paul4@gmail.com"

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb
$ git config --global core.editor "'C:/Program Files/Notepad++/notepad++.exe' -multiInst -notabbar -nosession -noPlugin"

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb
$ git config --global alias.hist "log --pretty=format:'%h %ad | %s%d [%an]' --graph --date=short"

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb
$ git init
Initialized empty Git repository in D:/!Paul/Oracle/MyDb/.git/

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git hist
fatal: your current branch 'master' does not have any commits yet

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git status
On branch master

Initial commit

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        entity_work.sql
        student_entity.sql

nothing added to commit but untracked files present (use "git add" to track)

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git add entity_work.sql

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git status
On branch master

Initial commit

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   entity_work.sql

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        entity_student.sql


student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git add .

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git status
On branch master

Initial commit

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   entity_student.sql
        new file:   entity_work.sql


student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git commit
[master (root-commit) 2ca6aed] This is starting dbase script. Commited entities student and work.
 2 files changed, 16 insertions(+)
 create mode 100644 entity_student.sql
 create mode 100644 entity_work.sql

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git hist
* 2ca6aed 2017-04-21 | This is starting dbase script. Commited entities student and work. (HEAD -> master) [Paul]

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git tag -a "version1"

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git hist
* 2ca6aed 2017-04-21 | This is starting dbase script. Commited entities student and work. (HEAD -> master, tag: version1) [Paul]

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git status
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

        modified:   entity_student.sql

no changes added to commit (use "git add" and/or "git commit -a")

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git add .

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git status
On branch master
Changes to be committed:
  (use "git reset HEAD <file>..." to unstage)

        modified:   entity_student.sql


student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git commit
[master a3037a0] Added Comment for student.
 1 file changed, 3 insertions(+), 2 deletions(-)

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git hist
* a3037a0 2017-04-21 | Added Comment for student. (HEAD -> master) [Paul]
* 2ca6aed 2017-04-21 | This is starting dbase script. Commited entities student and work. (tag: version1) [Paul]

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git tag -a version_1.1

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git hist
* a3037a0 2017-04-21 | Added Comment for student. (HEAD -> master, tag: version_1.1) [Paul]
* 2ca6aed 2017-04-21 | This is starting dbase script. Commited entities student and work. (tag: version1) [Paul]

$ git checkout version_1.1
Previous HEAD position was 2ca6aed... This is starting dbase script. Commited entities student and work.
HEAD is now at a3037a0... Added Comment for student.

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb ((version_1.1))
$ git remote

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb ((version_1.1))
$ git remote add myrep https://github.com/Paul-Brustinov/Test.git

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb ((version_1.1))
$ git remote
myrep

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb ((version_1.1))
$ git remote
myrep

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb ((version_1.1))
$

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb ((version_1.1))
$ git pull myrep
warning: no common commits
remote: Counting objects: 3, done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), done.
From https://github.com/Paul-Brustinov/Test
 * [new branch]      master     -> myrep/master
You are not currently on a branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull <remote> <branch>


student@K0606 MINGW64 /d/!Paul/Oracle/MyDb ((version_1.1))
$ git pull myrep master
From https://github.com/Paul-Brustinov/Test
 * branch            master     -> FETCH_HEAD
fatal: refusing to merge unrelated histories

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb ((version_1.1))
$ git pull myrep master --allow-unrelated-histories
From https://github.com/Paul-Brustinov/Test
 * branch            master     -> FETCH_HEAD
Merge made by the 'recursive' strategy.
 LICENSE.md | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 LICENSE.md

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb ((594ac1e...))
$ git hist
*   594ac1e 2017-04-21 | Merge branch 'master' of https://github.com/Paul-Brustinov/Test into HEAD (HEAD) [Paul]
|\
| * 3ad5e7f 2017-04-21 | Update LICENSE.md (myrep/master) [Paul-Brustinov]
* a3037a0 2017-04-21 | Added Comment for student. (tag: version_1.1, master) [Paul]
* 2ca6aed 2017-04-21 | This is starting dbase script. Commited entities student and work. (tag: version1) [Paul]

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb ((594ac1e...))
$ git add .

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb ((594ac1e...))
$ git commit
[detached HEAD 22372ee] ok
 2 files changed, 1 insertion(+)
 create mode 100644 git.log

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb ((22372ee...))
$ git push myrep master
To https://github.com/Paul-Brustinov/Test.git
 ! [rejected]        master -> master (non-fast-forward)
error: failed to push some refs to 'https://github.com/Paul-Brustinov/Test.git'
hint: Updates were rejected because a pushed branch tip is behind its remote
hint: counterpart. Check out this branch and integrate the remote changes
hint: (e.g. 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb ((22372ee...))
$ git pull myrep master
From https://github.com/Paul-Brustinov/Test
 * branch            master     -> FETCH_HEAD
Already up-to-date.

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb ((22372ee...))
$ git push myrep master
To https://github.com/Paul-Brustinov/Test.git
 ! [rejected]        master -> master (non-fast-forward)
error: failed to push some refs to 'https://github.com/Paul-Brustinov/Test.git'
hint: Updates were rejected because a pushed branch tip is behind its remote
hint: counterpart. Check out this branch and integrate the remote changes
hint: (e.g. 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb ((22372ee...))
$ git checkout master
Warning: you are leaving 2 commits behind, not connected to
any of your branches:

  22372ee ok
  594ac1e Merge branch 'master' of https://github.com/Paul-Brustinov/Test into HEAD

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 22372ee

Switched to branch 'master'

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git pull myrep master
From https://github.com/Paul-Brustinov/Test
 * branch            master     -> FETCH_HEAD
fatal: refusing to merge unrelated histories

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git checkout version_1.1
Note: checking out 'version_1.1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b <new-branch-name>

HEAD is now at a3037a0... Added Comment for student.

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb ((version_1.1))
$ git checkout master
Switched to branch 'master'

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git pull myrep master
From https://github.com/Paul-Brustinov/Test
 * branch            master     -> FETCH_HEAD
fatal: refusing to merge unrelated histories

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git pull myrep master --allow-unrelate-histories
error: unknown option `allow-unrelate-histories'
usage: git pull [<options>] [<repository> [<refspec>...]]

    -v, --verbose         be more verbose
    -q, --quiet           be more quiet
    --progress            force progress reporting

Options related to merging
    -r, --rebase[=<false|true|preserve|interactive>]
                          incorporate changes by rebasing rather than merging
    -n                    do not show a diffstat at the end of the merge
    --stat                show a diffstat at the end of the merge
    --log[=<n>]           add (at most <n>) entries from shortlog to merge commit message
    --squash              create a single commit instead of doing a merge
    --commit              perform a commit if the merge succeeds (default)
    --edit                edit message before committing
    --ff                  allow fast-forward
    --ff-only             abort if fast-forward is not possible
    --verify-signatures   verify that the named commit has a valid GPG signature
    --autostash           automatically stash/stash pop before and after rebase
    -s, --strategy <strategy>
                          merge strategy to use
    -X, --strategy-option <option=value>
                          option for selected merge strategy
    -S, --gpg-sign[=<key-id>]
                          GPG sign commit
    --allow-unrelated-histories
                          allow merging unrelated histories

Options related to fetching
    --all                 fetch from all remotes
    -a, --append          append to .git/FETCH_HEAD instead of overwriting
    --upload-pack <path>  path to upload pack on remote end
    -f, --force           force overwrite of local branch
    -t, --tags            fetch all tags and associated objects
    -p, --prune           prune remote-tracking branches no longer on remote
    --recurse-submodules[=<on-demand>]
                          control recursive fetching of submodules
    -j, --jobs[=<n>]      number of submodules pulled in parallel
    --dry-run             dry run
    -k, --keep            keep downloaded pack
    --depth <depth>       deepen history of shallow clone
    --unshallow           convert to a complete repository
    --update-shallow      accept refs that update .git/shallow
    --refmap <refmap>     specify fetch refmap


student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git pull myrep master --allow-unrelated-histories
From https://github.com/Paul-Brustinov/Test
 * branch            master     -> FETCH_HEAD
Merge made by the 'recursive' strategy.
 LICENSE.md | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 LICENSE.md

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git ststus
git: 'ststus' is not a git command. See 'git --help'.

Did you mean this?
        status

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git status
On branch master
nothing to commit, working tree clean

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git push myrep master
Counting objects: 9, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (9/9), done.
Writing objects: 100% (9/9), 1.17 KiB | 0 bytes/s, done.
Total 9 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), done.
To https://github.com/Paul-Brustinov/Test.git
   3ad5e7f..c30b595  master -> master

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git remote add oracleteam https://github.com/Paul-Brustinov/oracleteam.git

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git pull oracleteam master --allow-unrelated-histories
warning: no common commits
remote: Counting objects: 7, done.
remote: Compressing objects: 100% (5/5), done.
remote: Total 7 (delta 0), reused 7 (delta 0), pack-reused 0
Unpacking objects: 100% (7/7), done.
From https://github.com/Paul-Brustinov/oracleteam
 * branch            master     -> FETCH_HEAD
 * [new branch]      master     -> oracleteam/master
Merge made by the 'recursive' strategy.
 Entity Student.sql | 17 +++++++++++++++++
 Entity Work.sql    | 20 ++++++++++++++++++++
 README.md          |  1 +
 3 files changed, 38 insertions(+)
 create mode 100644 Entity Student.sql
 create mode 100644 Entity Work.sql
 create mode 100644 README.md

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git add .

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git commit
[master f0a27ff] merge with team
 2 files changed, 17 deletions(-)
 delete mode 100644 entity_student.sql
 delete mode 100644 entity_work.sql

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git add .

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git commit
[master 66122cb] added new file
 1 file changed, 8 insertions(+)
 create mode 100644 entity_car.sql

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git push oracleteam master
Counting objects: 19, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (17/17), done.
Writing objects: 100% (19/19), 2.23 KiB | 0 bytes/s, done.
Total 19 (delta 4), reused 0 (delta 0)
remote: Resolving deltas: 100% (4/4), done.
To https://github.com/Paul-Brustinov/oracleteam.git
   707f4c0..66122cb  master -> master

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git pull oracleteam master
remote: Counting objects: 25, done.
remote: Compressing objects: 100% (18/18), done.
remote: Total 25 (delta 4), reused 25 (delta 4), pack-reused 0
Unpacking objects: 100% (25/25), done.
From https://github.com/Paul-Brustinov/oracleteam
 * branch            master     -> FETCH_HEAD
   66122cb..0d083ef  master     -> oracleteam/master
Updating 66122cb..0d083ef
Fast-forward
 book.sql | 14 ++++++++++++++
 1 file changed, 14 insertions(+)
 create mode 100644 book.sql

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git add .

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git commit
[master 5baaaa3] checked
 1 file changed, 2 insertions(+), 1 deletion(-)

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git push oracleteam master
Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 303 bytes | 0 bytes/s, done.
Total 3 (delta 2), reused 0 (delta 0)
remote: Resolving deltas: 100% (2/2), completed with 2 local objects.
To https://github.com/Paul-Brustinov/oracleteam.git
   0d083ef..5baaaa3  master -> master

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$ git pull oracleteam master
remote: Counting objects: 14, done.
remote: Compressing objects: 100% (7/7), done.
remote: Total 14 (delta 7), reused 14 (delta 7), pack-reused 0
Unpacking objects: 100% (14/14), done.
From https://github.com/Paul-Brustinov/oracleteam
 * branch            master     -> FETCH_HEAD
   5baaaa3..4d2ba97  master     -> oracleteam/master
Updating 5baaaa3..4d2ba97
Fast-forward
 entity_car.sql | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

student@K0606 MINGW64 /d/!Paul/Oracle/MyDb (master)
$
